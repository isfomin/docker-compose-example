<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<source>
  @type tcp
  port 24225
  bind 0.0.0.0
  tag spring
  
  <parse>
    @type json
  </parse>
</source>

<source>
    @type tail
    tag tomcat.*
    path /opt/logs/**/*

    <parse>
      @type none
    </parse>
</source>

# <source>
#     @type tail
#     tag test-log
#     path /opt/test.log

#     <parse>
#       @type multiline
#       format_firstline /\d{4}-\d{1,2}-\d{1,2}/
#       format1 /^(?<time>\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}:\d{1,2}) \[(?<thread>.*)\] (?<level>[^\s]+)(?<message>.*)/
#     </parse>
# </source>

# <filter spring.*>
#   @type parser
#   key_name log
#   <parse>
#     @type json
#   </parse>
# </filter>

# <filter test-log>
#   @type parser
#   key_name message
#   <parse>
#     @type multiline
#     format_firstline /\d{4}-\d{1,2}-\d{1,2}/
#     format1 /^(?<time>\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}:\d{1,2}) \[(?<thread>.*)\] (?<level>[^\s]+)(?<message>.*)/
#   </parse>
# </filter>

# <filter spring.**>
#   @type parser
#   key_name log
#   <parse>
#     @type regexp
#     expression /^(?<logtime>\d{2,4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}:\d{1,2}\.\d{1,3})\s+(?<log_level>[A-Z]+) (?<pid>\d+) --- \[\s*(?<thread_name>[^\[]+)\] (?<logger_name>[^ ]+)\s+: (?<message>.*)/
#     time_key logtime
#     time_format %Y-%m-%d %H:%M:%S.%L
#   </parse>
# </filter>

<filter tomcat.**>
  @type parser
  key_name message
  <parse>
    @type regexp
    expression /^\[(?<logtime>.*)\] (?<session_id>[-|A-z0-9]) (?<remote_ip>(?:[0-9]{1,3}\.){3}[0-9]{1,3}) (?<http_method>\w*) (?<request_url>[\w\/-_]*) (?<http_version>[\w\/\.]*) (?<response_code>\d*) (?<connection_state>[-+x]) \((?<request_duration>\d*) (?<duration_unit>\w*)\)/
    time_key logtime
    time_format %d/%b/%Y:%H:%M:%S %z
    types response_code:integer,session_id:string
  </parse>
</filter>

<filter tomcat.**>
  @type record_transformer  
  <record>
    hostname "#{Socket.gethostname}"
    service_name ${tag_parts[3]}
    # tag ${tag}
  </record>
</filter>

<filter spring.**>
  @type record_transformer
  enable_ruby true
  <record>
    #hostname "#{Socket.gethostname}"
    #service_name ${tag_parts[1]}
    #tag ${tag}
    api_key ${if record["message"].nil? then if record["@fields.requested_url"].nil? then nil else record["@fields.requested_url"][/apikey=([^\s\[\]&]+)/i, 1] end else record["message"][/apikey=([^\s\[\]&]+)/i, 1] end }
    \@fields.status_code ${if record["@fields.status_code"].nil? then record["message"][/status = \[(\d{1,3})\]/, 1] || -1 else record["@fields.status_code"] end }
    \@fields.requested_uri ${if record["@fields.requested_uri"].nil? then record["message"][/uri = \[([^\s\?\]]+)/, 1] else record["@fields.requested_uri"] end }
  </record>
</filter>

# <match *.**>
#   @type stdout
# </match>

<match spring.**>
  @type elasticsearch
  host elasticsearch
  port 9200
  logstash_format true
  logstash_prefix spring-log
  flush_interval 1s
</match>

# <match test-log>
#   @type elasticsearch
#   host elasticsearch
#   port 9200
#   logstash_format true
#   logstash_prefix test-log
#   flush_interval 1s
# </match>

<match fluent.*>
  @type elasticsearch
  host elasticsearch
  port 9200
  logstash_format true
  logstash_prefix fluentd-log
  flush_interval 1s
</match>

<match tomcat.**>
  @type elasticsearch
  host elasticsearch
  port 9200
  logstash_format true
  logstash_prefix access-log
  flush_interval 1s
</match>